{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iBAgRA;AA3OA,SAAS,SAAS;IACd,IAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;IACtC,IAAI,MAAM,EAAE;QACR,IAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,SAAS,EAAE;YACX,IAAM,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACvC,IAAM,MAAM,GAAW,SAAS,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,IAAI;;gBAC/C,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC5B,oBACO,IAAI;oBAEH,GAAC,GAAG,CAAC,CAAC,CAAC,IAAG,GAAG,CAAC,CAAC,CAAC;yBAEvB;YACL,CAAC,EAAE,EAAE,CAAC,CAAC;YACP,OAAO,MAAM,CAAC;SACjB;KACJ;IACD,OAAO,EAAE,CAAC;AACd,CAAC;AAED,SAAS,OAAO;IACZ,IAAM,MAAM,GAAG,SAAS,EAAE,CAAC;IAC3B,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAC5B,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,SAAS,MAAM,CAAC,IAAY;IACxB,IAAI,IAAI,KAAK,SAAS,EAAE;QACpB,OAAO,oBAAkB,IAAI,SAAI,IAAI,UAAO,CAAC;KAChD;IACD,OAAO,kCAAkC,CAAC;AAC9C,CAAC;AAED,SAAe,iBAAiB;;;;;;oBACtB,GAAG,GAAG,kCAAkC,CAAC;oBAC9B,qBAAM,KAAK,CAAC,GAAG,EAAE;4BAC9B,MAAM,EAAE,KAAK;yBAChB,CAAC,EAAA;;oBAFI,QAAQ,GAAG,SAEf;oBACW,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;;oBAA5B,IAAI,GAAG,SAAqB;oBAClC,sBAAO,IAAI,EAAC;;;;CACf;AAED,SAAe,SAAS,CAAC,IAAY;;;;;;oBAC3B,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;oBACR,qBAAM,KAAK,CAAC,GAAG,EAAE;4BAC9B,MAAM,EAAE,KAAK;yBAChB,CAAC,EAAA;;oBAFI,QAAQ,GAAG,SAEf;oBACW,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;;oBAA5B,IAAI,GAAG,SAAqB;oBAClC,sBAAO,IAAI,EAAC;;;;CACf;AAED,SAAS,aAAa,CAAC,KAAY,EAAE,IAAgB;IACjD,OAAO,iEAGc,KAAK,CAAC,KAAK,CAAC,YAAY,oEAIxB,KAAK,CAAC,KAAK,CAAC,YAAY,oFAIb,KAAK,CAAC,KAAK,CAAC,YAAY,8HAIZ,IAAI,CAAC,EAAE,SAAI,IAAI,CAAC,EAAE,6CAEpD,IAAI,CAAC,WAAW,0EAGZ,IAAI,CAAC,WAAW,6EAAwE,IAAI,CAAC,WAAW,qHAC1B,IAAI,CAAC,WAAW,8DAIhG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,2FAEI,CAAC,CAAC,IAAI,4QAQxB,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,sDACA,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,GAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,wFAE/C,CAAC,CAAC,IAAI,2HAGN,CAAC,CAAC,WAAW,2HAIX,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,8GAEL,CAAC,uIAEA,CAAC,wOAIjB,EARoB,CAQpB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,yGAI1B,EAtBsB,CAsBtB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,uBAElB,EAlCqB,CAkCrB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,mCAIf,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,2CACG,CAAC,yBACxB,EAFoB,CAEpB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,gGAIT,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,UAAC,WAAW,EAAE,KAAK;QACxC,IAAI,KAAK,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,EAAE;YAChD,OAAO,yCACQ,WAAW,CAAC,OAAO,yCACxB,WAAW,CAAC,IAAI,yDAEzB,CAAC;SACL;aAAM,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,GAAE,CAAC,EAAE;YAC1D,OAAO,iBAAc,WAAW,CAAC,OAAO,WAAK,WAAW,CAAC,IAAI,SAAM,CAAC;SACvE;aAAM;YACH,OAAO,mBAAgB,WAAW,CAAC,OAAO,WAAK,WAAW,CAAC,IAAI,SAAM,CAAC;SACzE;IACL,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,2SAOlB,CAAC;AACN,CAAC;AAED,SAAS,WAAW,CAAC,CAAS;IAC1B,OAAO,KAAG,CAAG,CAAC;AAClB,CAAC;AAED,SAAS,KAAK,CAAC,QAAgB,EAAE,IAAY;IACzC,IAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC5C,IAAI,EAAE,EAAE;QACJ,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;AACL,CAAC;AAED,SAAS,UAAU,CAAC,YAA0B;IAC1C,OAAO,0xBA2BG,YAAY,CAAC,GAAG,CAAC,UAAA,CAAC;QAChB,OAAO,4HAGuB,CAAC,CAAC,EAAE,6CAChB,CAAC,CAAC,WAAW,qIAIjB,CAAC,CAAC,WAAW,oHAGG,CAAC,CAAC,EAAE,4LAKjC,CAAC;IACN,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,oHAKlB,CAAC;AACN,CAAC;AAED,CAAC;;;;;gBACS,IAAI,GAAG,OAAO,CAAC;;;;gBAEX,WAAS,OAAO,EAAE,CAAC;gBACJ,qBAAM,iBAAiB,EAAE,EAAA;;gBAAxC,YAAY,GAAG,SAAyB;gBAC1C,IAAI,GAAG,EAAE,CAAC;qBAEV,CAAA,QAAM,KAAK,SAAS,CAAA,EAApB,wBAAoB;gBACpB,IAAI,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC;;;qBACzB,CAAA,YAAY,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,QAAM,EAAf,CAAe,CAAC,KAAK,SAAS,CAAA,EAArD,wBAAqD;gBAC5D,IAAI,GAAG,uDAEN,CAAC;;oBAEW,qBAAM,SAAS,CAAC,QAAO,CAAC,EAAA;;gBAA/B,IAAI,GAAG,SAAwB;gBAC/B,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,QAAM,EAAf,CAAe,CAAC,CAAC;gBACrD,IAAI,GAAG,aAAa,CAAC,IAAI,EAAE,IAAK,CAAC,CAAC;;;gBAGtC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;;;gBAGZ,IAAI,GAAG,WAAW,CAAC,GAAC,CAAC,OAAO,CAAC,CAAC;gBACpC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;;;;KAEzB,CAAC,EAAE,CAAC","sourcesContent":["interface Topic {\r\n    name: string;\r\n    description: string;\r\n    resources: string[];\r\n}\r\n\r\ninterface Level {\r\n    name: string;\r\n    topics: Topic[];\r\n}\r\n\r\ninterface Contributor {\r\n    name: string;\r\n    contact: string;\r\n}\r\n\r\ninterface Props {\r\n    theme: Theme,\r\n    levels: Level[];\r\n    notes: string[];\r\n    contributors: Contributor[];\r\n}\r\n\r\ninterface Params {\r\n    [key: string]: string;\r\n}\r\n\r\ninterface Theme {\r\n    primaryColor: string;\r\n}\r\n\r\ninterface Technology {\r\n    id: string;\r\n    displayName: string;\r\n    description: string;\r\n}\r\n\r\nfunction getParams(): Params {\r\n    const search = window.location.search;\r\n    if (search) {\r\n        const paramsStr = search.split(\"?\")[1];\r\n        if (paramsStr) {\r\n            const rawParams = paramsStr.split(\"&\");\r\n            const params: Params = rawParams.reduce((prev, curr) => {\r\n                const raw = curr.split(\"=\");\r\n                return {\r\n                    ...prev,\r\n                    ...{\r\n                        [raw[0]]: raw[1]\r\n                    }\r\n                }\r\n            }, {});\r\n            return params;\r\n        }\r\n    }\r\n    return {};\r\n}\r\n\r\nfunction getTech(): string | undefined {\r\n    const params = getParams();\r\n    const tech = params[\"tech\"];\r\n    return tech;\r\n}\r\n\r\nfunction getUrl(tech: string) {\r\n    if (tech !== undefined) {\r\n        return `./technologies/${tech}/${tech}.json`;\r\n    }\r\n    return \"./technologies/technologies.json\";\r\n}\r\n\r\nasync function fetchTechnologies(): Promise<Technology[]> {\r\n    const url = \"./technologies/technologies.json\";\r\n    const response = await fetch(url, {\r\n        method: \"GET\"\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n}\r\n\r\nasync function fetchData(tech: string): Promise<Props> {\r\n    const url = getUrl(tech);\r\n    const response = await fetch(url, {\r\n        method: \"GET\"\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n}\r\n\r\nfunction renderContent(props: Props, tech: Technology) {\r\n    return `\r\n        <style>\r\n            h1 {\r\n                color: ${props.theme.primaryColor};\r\n            }\r\n\r\n            a {\r\n                color: ${props.theme.primaryColor};\r\n            }\r\n\r\n            .level {\r\n                background-color: ${props.theme.primaryColor};\r\n                color: #ffffff;\r\n            }\r\n        </style>\r\n        <img class=\"logo\" src=\"./technologies/${tech.id}/${tech.id}.png\" />\r\n        <h1>\r\n            ${tech.displayName} Progression Ladder\r\n        </h1>\r\n        <h4>\r\n            The ${tech.displayName} progression ladder is a grouping of concepts and skills relevant to ${tech.displayName} programming.\r\n            It provides aspiring TypeScript programmers with a way to track and improve their ${tech.displayName} skills.\r\n        </h4>\r\n        <table>\r\n            ${\r\n                props.levels.map(l => `\r\n                    <tr class=\"level\">\r\n                        <td colspan=\"3\">${l.name}</td>\r\n                    </tr>\r\n                    <tr class=\"level-subtitle\">\r\n                        <td>CONCEPTS</td>\r\n                        <td>SKILLS</td>\r\n                        <td>RESOURCES</td>\r\n                    </tr>\r\n                    ${\r\n                        l.topics.map((t, i) => `\r\n                            <tr class=\"topic ${i === l.topics.length -1 ? \"last\" : \"\"}\">\r\n                                <td>\r\n                                    ${t.name}\r\n                                </td>\r\n                                <td>\r\n                                    ${t.description}\r\n                                </td>\r\n                                <td>\r\n                                    ${\r\n                                        t.resources.map(r => `\r\n                                            <a\r\n                                                href=\"${r}\"\r\n                                                target=\"_blank\"\r\n                                                title=\"${r}\"\r\n                                            >\r\n                                                <i class=\"material-icons\">link</i>\r\n                                            </a>\r\n                                        `).join(\"\")\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        `).join(\"\")\r\n                    }\r\n                `).join(\"\")\r\n            }\r\n        <table>\r\n        ${\r\n            props.notes.map(n => `\r\n                <div class=\"note\">${n}</div>\r\n            `).join(\"\")\r\n        }\r\n        <div class=\"copyright\">\r\n            This guide was created by\r\n            ${props.contributors.map((contributor, index) => {\r\n                if (props.contributors.length === 1 || index === 0) {\r\n                    return `\r\n                        <a href=\"${contributor.contact}\">\r\n                            ${contributor.name}\r\n                        </a>\r\n                    `;\r\n                } else if (index > 0 && index < props.contributors.length -1) {\r\n                    return `, <a href=\"${contributor.contact}\">${contributor.name}</a>`;\r\n                } else {\r\n                    return `and <a href=\"${contributor.contact}\">${contributor.name}</a>`;\r\n                }\r\n            }).join(\"\")}\r\n            and it is licensed under\r\n            <a\r\n                href=\"https://creativecommons.org/licenses/by/4.0/\"\r\n                title=\"Creative Commons Attribution 4.0 International license\"\r\n            >Creative Commons Attribution 4.0 International<a>.\r\n        </div>\r\n    `;\r\n}\r\n\r\nfunction renderError(e: string) {\r\n    return `${e}`;\r\n}\r\n\r\nfunction mount(selector: string, html: string) {\r\n    const $e = document.querySelector(selector);\r\n    if ($e) {\r\n        $e.innerHTML = html;\r\n    }\r\n}\r\n\r\nfunction renderHome(technologies: Technology[]) {\r\n    return `\r\n        <style>\r\n            h1 {\r\n                color: #f7a80d;\r\n            }\r\n\r\n            a {\r\n                color: #f7a80d;\r\n            }\r\n\r\n            .level {\r\n                background-color: #f7a80d;\r\n                color: #ffffff;\r\n            }\r\n        </style>\r\n        <img class=\"logo\" src=\"./assets/logo.png\" />\r\n        <h1>Tech Ladder IO</h1>\r\n        <h4>\r\n            A community-driven grouping of concepts and skills relevant to different technologies\r\n            that provides aspiring programmers with a way to track and improve their skills.\r\n        </h4>\r\n        <table>\r\n            <tr class=\"level\">\r\n                <td>Technology</td>\r\n                <td>Description</td>\r\n                <td>Ladder</td>\r\n            </tr>\r\n            ${technologies.map(t => {\r\n                return `\r\n                    <tr class=\"topic\">\r\n                        <td>\r\n                            <a href=\"/?tech=${t.id}\">\r\n                                ${t.displayName}\r\n                            </a>\r\n                        </td>\r\n                        <td>\r\n                            ${t.description}\r\n                        </td>\r\n                        <td>\r\n                            <a href=\"/?tech=${t.id}\">\r\n                                <i class=\"material-icons\">link</i>\r\n                            </a>\r\n                        </td>\r\n                    </tr>\r\n                `;\r\n            }).join(\"\")}\r\n        <table>\r\n        <div class=\"promo\">\r\n            <h1>We need yout help!</h1>\r\n        </div>\r\n    `;\r\n}\r\n\r\n(async () => {\r\n    const root = \"#main\";\r\n    try {\r\n        const techId = getTech();\r\n        const technologies = await fetchTechnologies();\r\n        let html = \"\";\r\n\r\n        if (techId === undefined) {\r\n            html = renderHome(technologies);\r\n        } else if (technologies.find(t => t.id === techId) === undefined) {\r\n            html = `\r\n                Sorry page not found!\r\n            `;\r\n        } else {\r\n            const data = await fetchData(techId!);\r\n            const tech = technologies.find(t => t.id === techId);\r\n            html = renderContent(data, tech!);\r\n        }\r\n        \r\n        mount(root, html);\r\n\r\n    } catch(e) {\r\n        const html = renderError(e.message);\r\n        mount(root, html);\r\n    }\r\n})();\r\n"]}